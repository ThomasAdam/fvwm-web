#!/usr/bin/perl -w

# Usage: perllib2html .  # optional output directory relative to the script

use strict;

unless (`man2html none 2>/dev/null | grep -i 'Content-type: text/html'`) {
	die "You don't have man2html cgi needed for this script\n" .
		"It usually comes together with man(1) on Linux\n";
}

my $scriptDir = ($0 =~ m:(^.*?)/[^/]+$: ? $1 : ".");
my $scriptName = ($0 =~ m:([^/]+)$:, $1);

my $outputDir = $scriptDir;
my $subdir = shift;
$outputDir  =   $subdir  if $subdir && $subdir =~ m!^/!;
$outputDir .= "/$subdir" if $subdir && $subdir !~ m!^/!;

my $HEADER = q(
	<html>
	<head>
	<title>FVWM Perl Library - @topic@</title>
	<style><!--
	# All these may be commented out
	#H1, H2 { margin-left: -0; }
	#BLACKQUOTE { margin-left: +48; }
	#P { margin-left: +24; }
	B { color: #ffffb0; }
	I { color: #b0ffff; }
	--></style>
	</head>
	<body BACKGROUND="../../black-stone1.jpg"
		bgcolor="#000000" text="#ffffff"
		link="#a0ffa0" vlink="#c8eec8" alink="#44ff44">
	<center>
	<h1><font color="pink">FVWM Perl Library</font></h1>
	</center>
);

my $FOOTER = q(
	<hr>
	<!-- Automatically generated by @script@ on @date@ -->
	</body>
	</html>
);

my $namespace = {
	date => `date '+%d-%b-%Y %T' | tr -d '\n'`,
	user => $ENV{USER} || "mr_hacker",
	script => $scriptName,
	topic => "*unset-topic*",
};

sub processTemplate ($) {
	my $text = shift;
	$text =~ s/^\n//s;
	$text =~ s/^\t//mg;
	$text =~ s/\@foreach\@ (\w+) in (\w+)\n(.*?)\@endforeach\@\n/
		my ($var, $list, $subTemplate) = ($1, $namespace->{$2}, $3);
		join('', map { local $namespace->{$var} = $_;
			processTemplate($subTemplate); } @$list); 
	/seg;
	$text =~ s/@(\w+)@/$namespace->{$1}/mge;
	return $text;
}

sub saveFile ($$) {
	my $fileName = shift;
	my $text = shift;
	open(OUT, ">$scriptDir/$fileName") || die($!);
	print OUT $text;
	close(OUT) || die($!);
}

# ---- main ------------------------------------------------------------------

my @topics = `fvwm-perllib cat` =~ /^ +([\w:]+)$/mg;
my $topicRegExp = join("|", reverse @topics);
print "Topics reported by fvwm-perllib cat:\n\t", join("\n\t", @topics), "\n";

foreach my $topic (@topics) {
	my $htmlFile = "$topic.html";
	print "Creating $htmlFile\n";
	$namespace->{topic} = $topic;

	my $sourceRefer = "";
	if ($topic =~ /::/) {
		my $srcFile = $topic . ".pm"; $srcFile =~ s!::!/!g;
		$sourceRefer = qq(Source: <a href="ftp://ftp.fvwm.org/pub/fvwm/devel/sources/perllib/$srcFile">$srcFile</a><br>\n);
	}

	# some fixes
	my $fixCmd = q{perl -pe ' \
	s!^(\.in \+.*)!%blockquote%!i; s!^(\.in -.*)!%/blockquote%!i; \
	s!^(\.Vb.*)!%pre% %blockquote%!i; s!^(\.Ve.*)!%/pre% %/blockquote%!i; \
	s!\\\\fB\\\\\\*\\(--!\\\\fB\\-\\-!; '};

	local $_ = `fvwm-perllib raw $topic | $fixCmd | man2html -p`;

	# skip cgi header and footer
	s!^.*?<body>(.*)</body>.*$!$1!si;

	# replace some output
	s!\07!!g;
	s!<FONT SIZE="-1">!<FONT>!ig;
	s!<FONT><B>(.*?)</B></FONT><B>!<B>$1!ig;
	s!(<A HREF=".*?">)Index!$sourceRefer$1This page contents!;
	s!<A HREF=".*?">Return to Main Contents! - <a href="./">Return to main index!;
	s!(<H1>)perllib(</H1>)!$1 . "Perl Library " . ucfirst($topic) . $2!e;
	s!(<BR>)Updated(: )!$1Version$2!;
	s!http://localhost/cgi-bin/man/man2html!./!g;

	# correct example blocks
	s!%(/?pre)%!<$1>!g;
	s!%(/?blockquote)%!<$1>!g;
	s!(<pre>)\s+(<blockquote>)\n*!$2$1!sig;
	s!\n*(</pre>)\s+(</blockquote>)!$1$2!sig;
	s!</pre></blockquote>\n<blockquote><pre>!\n\n!sg;

	# add links
	s!^((?:<blockquote><pre>)?\s*)($topicRegExp)((?:</pre></blockquote>)?)$!$1<a href="./$2.html">$2</a>$3!mg;
	s!(the )($topicRegExp)( manpage)!$1<a href="./$2.html">$2</a>$3!g;
	s!(the )([Ff]vwm[\w-]*)( manpage)!$1<a href="../manpages/$2.html">$2</a>$3!g;
	s!(<[BbIi]>)($topicRegExp)(</[BbIi]>)!$1<a href="./$2.html">$2</a>$3!g;
	s!(<[BbIi]>)(fvwm)(</[BbIi]>)!$1<a href="../manpages/$2.html">$2</a>$3!g;
	s!<a href="./$topic.html">$topic</a>!$topic!g;  # don't self-link

	saveFile(
		$htmlFile,
		processTemplate($HEADER) . $_ . processTemplate($FOOTER)
	);
}
