#!/usr/bin/perl -w

# Usage: manpages2html ../../../fvwm-2.4.x .  # both parameters are optional

use strict;

unless (`man2html none 2>/dev/null | grep -i 'Content-type: text/html'`) {
	die "You don't have man2html cgi needed for this script\n" .
		"It usually comes together with man(1) on Linux\n";
}

my $scriptDir = ($0 =~ m:(^.*?)/[^/]+$: ? $1 : ".");
my $scriptName = ($0 =~ m:([^/]+)$:, $1);

my $sourceDir = shift || "../../../fvwm";
my $outputDir = $scriptDir;
my $subdir = shift;
$outputDir  =   $subdir  if $subdir && $subdir =~ m!^/!;
$outputDir .= "/$subdir" if $subdir && $subdir !~ m!^/!;

my $HEADER = q(
	<html>
	<head>
	<title>FVWM Manpage - @topic@</title>
	<style><!--
	# All these may be commented out
	#H1, H2 { margin-left: -0; }
	#BLACKQUOTE { margin-left: +48; }
	#P { margin-left: +24; }
	B { color: #ffffb0; }
	I { color: #b0ffff; }
	--></style>
	</head>
	<body BACKGROUND="../../black-stone1.jpg"
		bgcolor="#000000" text="#ffffff"
		link="#a0ffa0" vlink="#c8eec8" alink="#44ff44">
	<center>
	<h1><font color="pink">FVWM Manpage</font></h1>
	</center>
);

my $FOOTER = q(
	<hr>
	<!-- Automatically generated by @script@ on @date@ -->
	</body>
	</html>
);

my $INDEX = q(
	<h1>Index</h1>
	<hr>
	These pages were last generated on @date@ by @user@,
	from the man pages in directory @source@.

	<hr>
	Start of man pages in section 1.
	<ul>
	@foreach@ topic in topics
		<li><a href="@topic@.html">@topic@</a>
	@endforeach@
	</ul>

	<hr>
	Developer man pages (2.5.x only).
	<ul>
		<li><a href="../perllib/">Perl Library</a>
	</ul>
);

my $namespace = {
	date => `date '+%d-%b-%Y %T' | tr -d '\n'`,
	user => $ENV{USER} || "mr_hacker",
	script => $scriptName,
	source => $sourceDir,
	topic => "*unset-topic*",
};

sub processTemplate ($) {
	my $text = shift;
	$text =~ s/^\n//s;
	$text =~ s/^\t//mg;
	$text =~ s/\@foreach\@ (\w+) in (\w+)\n(.*?)\@endforeach\@\n/
		my ($var, $list, $subTemplate) = ($1, $namespace->{$2}, $3);
		join('', map { local $namespace->{$var} = $_;
			processTemplate($subTemplate); } @$list);
	/seg;
	$text =~ s/@(\w+)@/$namespace->{$1}/mge;
	return $text;
}

sub saveFile ($$) {
	my $fileName = shift;
	my $text = shift;
	open(OUT, ">$outputDir/$fileName") || die($!);
	print OUT $text;
	close(OUT) || die($!);
}

# ---- main ------------------------------------------------------------------

# currently only support .1 manpages, but it is possible to extend this
my @files = map { chomp($_); $_ } `find $sourceDir -name '*.[1]'`;
my @topics = map { m!/([^/]+)\.\d$!; $1 || "internal error" } @files;
my %topic2file = ();
foreach my $i (0 .. @topics - 1) { $topic2file{$topics[$i]} = $files[$i]; };

# sort topics like _we_ want, not just alphabetically
@topics = sort { $a =~ /^fvwm2?$/? -1: $b =~ /^fvwm2?$/? 1: $a cmp $b } @topics;
$namespace->{topics} = [ @topics ];
my $topicRegExp = join("|", reverse @topics);
print "Number of man pages found in $sourceDir: ", scalar @topics, "\n";

foreach my $topic ("index", @topics) {
	my $htmlFile = "$topic.html";
	my $manFile = $topic2file{$topic} || "none.1";
	print "Creating $htmlFile\n";
	$namespace->{topic} = $topic;

	# some fixes
	my $fixCmd = q{perl -pe ' \
	s!^(\.in \+.*)!%blockquote%!i; s!^(\.in -.*)!%/blockquote%!i; \
	s!^(\.Vb.*)!%pre% %blockquote%!i; s!^(\.Ve.*)!%/pre% %/blockquote%!i; \
	s!\\\\fB\\\\\\*\\(--!\\\\fB\\-\\-!; '};

	local $_ = $topic eq "index"?
		processTemplate($INDEX):
		`cat $manFile | $fixCmd | man2html -p`;

	# skip cgi header and footer
	s!^.*?<body>(.*)</body>.*$!$1!si;

	# replace some output
	s!\07!!g;
	s!<FONT SIZE="-1">!<FONT>!ig;
	s!(<A HREF=".*?">)Index!$1This page contents!;
	s!<A HREF=".*?">Return to Main Contents! - <a href="./">Return to main index!;
	s!http://localhost/cgi-bin/man/man2html!./!g;
	s!<A HREF="mailto:StartMenu@!<a name="local-fix:!g;
	s!/1\+($topicRegExp)"!/$1.html"!g;

	# correct example blocks
	s!%(/?pre)%!<$1>!g;
	s!%(/?blockquote)%!<$1>!g;
	s!(<pre>)\s+(<blockquote>)\n*!$2$1!sig;
	s!\n*(</pre>)\s+(</blockquote>)!$1$2!sig;
	s!</pre></blockquote>\n<blockquote><pre>!\n\n!sg;

	# add links
	s!^((?:<blockquote><pre>)?\s*)($topicRegExp)((?:</pre></blockquote>)?)$!$1<a href="./$2.html">$2</a>$3!mg;
	s!(the )($topicRegExp)( manpage)!$1<a href="./$2.html">$2</a>$3!g;
	s!(<[bB]>)($topicRegExp)(</[bB]>)!$1<a href="./$2.html">$2</a>$3!g;
	s!<a href="./$topic.html">$topic</a>!$topic!g;  # don't self-link

	saveFile(
		$htmlFile,
		processTemplate($HEADER) . $_ . processTemplate($FOOTER)
	);
}
