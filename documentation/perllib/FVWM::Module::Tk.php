<?php
//--------------------------------------------------------------------
//-  File          : documentation/manpages/template.php
//-  Project       : FVWM Home Page
//-  Programmer    : Uwe Pross
//--------------------------------------------------------------------

// This is an autogenerated file, use perllib2php to create it.

//--------------------------------------------------------------------
// this manpages should not appear in the navigation structure
// so we hide its contents from navgen
//--------------------------------------------------------------------
if(isset($navigation_check)) return;

$rel_path = "./../..";

//--------------------------------------------------------------------
// load some global definitions
//--------------------------------------------------------------------
include_once("$rel_path/definitions.inc");

//--------------------------------------------------------------------
// Site definitions
//--------------------------------------------------------------------
$title          = "FVWM - Perl library - FVWM::Module::Tk";
$heading        = "FVWM - Perl library - FVWM::Module::Tk";
$link_name      = "Perl library";
$link_picture   = "pictures/icons/doc_manpages";
$parent_site    = "documentation";
$child_sites    = array();
$requested_file = basename(my_get_global("PHP_SELF", "SERVER"));
$this_site      = "manpages";

//--------------------------------------------------------------------
// load the layout file
//--------------------------------------------------------------------
if(!isset($site_has_been_loaded)) {
	$site_has_been_loaded = "true";
	if(isset($layout)) {
		$file = "$rel_path/layout_$layout.inc";
		if (file_exists($file)) $layout_file = $file;
	}
	include(sec_filename($layout_file));
	exit();
}
?>

<?php decoration_window_start("Manual page for FVWM::Module::Tk in unstable branch (2.5.8)"); ?>

<H1>FVWM::Module::Tk</H1>
Section: FVWM Perl library (3)<BR>Updated: 2003-10-26<BR>Source: <a href="ftp://ftp.fvwm.org/pub/fvwm/devel/sources/perllib/FVWM/Module/Tk.pm">FVWM/Module/Tk.pm</a><br>
<A HREF="#index">This page contents</A>
 - <a href="./">Return to main index</A><HR>

<A NAME="lbAB">&nbsp;</A>
<H2>NAME</H2>

FVWM::Module::Tk - FVWM::Module with the Tk widget library attached
<A NAME="lbAC">&nbsp;</A>
<H2>SYNOPSIS</H2>

<A NAME="ixAAC"></A>
Name this module TestModuleTk, make it executable and place in ModulePath:
<P>

<blockquote><pre>    #!/usr/bin/perl -w</pre></blockquote>
<P>

<blockquote><pre>    use lib `fvwm-perllib dir`;
    use FVWM::Module::Tk;
    use Tk;  # preferably in this order</pre></blockquote>
<P>

<blockquote><pre>    my $top = new MainWindow(-name =&gt; &quot;Simple Test&quot;);
    my $id = $top-&gt;wrapper-&gt;[0];</pre></blockquote>
<P>

<blockquote><pre>    my $module = new FVWM::Module::Tk(
        TopWindow =&gt; $top,
        Mask =&gt; M_ICONIFY | M_ERROR,  # Mask may be omitted
        Debug =&gt; 2,
    );
    $top-&gt;Button(
        -text =&gt; &quot;Close&quot;, -command =&gt; sub { $top-&gt;destroy; }
    )-&gt;pack;</pre></blockquote>
<P>

<blockquote><pre>    $module-&gt;addDefaultErrorHandler;
    $module-&gt;addHandler(M_ICONIFY, sub {
        my $id0 = $_[1]-&gt;_win_id;
        $module-&gt;send(&quot;Iconify off&quot;, $id) if $id0 == $id;
    });
    $module-&gt;track('Scheduler')-&gt;schedule(60, sub {
        $module-&gt;showMessage(&quot;You run this module for 1 minute&quot;)
    });</pre></blockquote>
<P>

<blockquote><pre>    $module-&gt;send('Style &quot;*imple Test&quot; Sticky');
    $module-&gt;eventLoop;</pre></blockquote>
<A NAME="lbAD">&nbsp;</A>
<H2>DESCRIPTION</H2>

<A NAME="ixAAD"></A>
The <B><u>FVWM::Module::Tk</u></B> class is a sub-class of <B><a href="<?php echo conv_link_target('./FVWM::Module::Toolkit.php');?>">FVWM::Module::Toolkit</a></B>
that overloads the methods <B>new</B>, <B>eventLoop</B>, <B>showMessage</B>,
<B>showDebug</B> and <B>showError</B> to manage Tk objects as well. It also adds new
method <B>topWindow</B>.
<P>

This manual page details only those differences. For details on the
<FONT>API</FONT> itself, see FVWM::Module.
<A NAME="lbAE">&nbsp;</A>
<H2>METHODS</H2>

<A NAME="ixAAE"></A>
Only overloaded or new methods are covered here:
<DL COMPACT>
<DT><B>new</B> <I>param-hash</I><DD>
<A NAME="ixAAF"></A>
$module = new <B><u>FVWM::Module::Tk</u></B> <I>TopWindow</I> =&gt; <TT>$top</TT>, <TT>%params</TT>


<P>


Create and return an object of the <B><u>FVWM::Module::Tk</u></B> class.
This <B>new</B> method is identical to the (grand-)parent class method, with the
exception that a Tk top-level of some sort (MainWindow, TopLevel, Frame,
etc.) may be passed in the hash of options using the <I>TopWindow</I> named value.
Other options in <I>param-hash</I> are the same as described in FVWM::Module.


<P>


If no top-level window is specified in the constructor, such dummy window
is created and immediatelly withdrawn. This top-level window is needed to
create Tk dialogs.
<DT><B>eventLoop</B><DD>
<A NAME="ixAAG"></A>
From outward appearances, this methods operates just as the parent
<B>eventLoop</B> does. It is worth mentioning, however, that this version
enters into the Tk <B>MainLoop</B> subroutine, ostensibly not to return.
<DT><B>showError</B> <I>msg</I> [<I>title</I>]<DD>
<A NAME="ixAAH"></A>
This method creates a dialog box using the Tk widgets. The dialog has
three buttons labeled ``Close'', ``Close All Errors'' and ``Exit Module''.
Selecting the ``Close'' button closes the dialog. ``Close All Errors'' closes
all error dialogs that may be open on the screen at that time.
``Exit Module'' terminates your entire module.


<P>


Good for diagnostics of a Tk based module.
<DT><B>showMessage</B> <I>msg</I> [<I>title</I>]<DD>
<A NAME="ixAAI"></A>
Creates a message window with one ``Ok'' button.


<P>


Useful for notices by a Tk based module.
<DT><B>showDebug</B> <I>msg</I> [<I>title</I>]<DD>
<A NAME="ixAAJ"></A>
Creates a debug window with 3 buttons ``Close'', ``Clear'' and ``Save''.
All debug messages are added to the debug window.


<P>


``Close'' withdraws the window until the next debug message arrives.


<P>


``Clear'' erases the current contents of the debug window.


<P>


``Save'' dumps the current contents of the debug window to the selected file.


<P>


Useful for debugging a Tk based module.
<DT><B>topWindow</B><DD>
<A NAME="ixAAK"></A>
Returns the Tk toplevel that this object was created with.
</DL>
<A NAME="lbAF">&nbsp;</A>
<H2>BUGS</H2>

<A NAME="ixAAL"></A>
Would not surprise me in the least.
<A NAME="lbAG">&nbsp;</A>
<H2>AUTHOR</H2>

<A NAME="ixAAM"></A>
Mikhael Goikhman &lt;<A HREF="mailto:migo@homemail.com">migo@homemail.com</A>&gt;.
<A NAME="lbAH">&nbsp;</A>
<H2>THANKS TO</H2>

<A NAME="ixAAN"></A>
Randy J. Ray &lt;<A HREF="mailto:randy@byz.org">randy@byz.org</A>&gt;, author of the old classes
<B>X11::Fvwm</B> and <B>X11::Fvwm::Tk</B>.
<P>

Scott Smedley &lt;<A HREF="mailto:ss@aao.gov.au">ss@aao.gov.au</A>&gt;.
<P>

Nick Ing-Simmons &lt;<A HREF="mailto:Nick.Ing-Simmons@tiuk.ti.com">Nick.Ing-Simmons@tiuk.ti.com</A>&gt; for Tk Perl extension.
<A NAME="lbAI">&nbsp;</A>
<H2>SEE ALSO</H2>

<A NAME="ixAAO"></A>
For more information, see fvwm, <a href="<?php echo conv_link_target('./FVWM::Module.php');?>">FVWM::Module</a> and Tk.
<P>

<HR>
<A NAME="index">&nbsp;</A><H2>Index</H2>
<DL>
<DT><A HREF="#lbAB">NAME</A><DD>
<DT><A HREF="#lbAC">SYNOPSIS</A><DD>
<DT><A HREF="#lbAD">DESCRIPTION</A><DD>
<DT><A HREF="#lbAE">METHODS</A><DD>
<DT><A HREF="#lbAF">BUGS</A><DD>
<DT><A HREF="#lbAG">AUTHOR</A><DD>
<DT><A HREF="#lbAH">THANKS TO</A><DD>
<DT><A HREF="#lbAI">SEE ALSO</A><DD>
</DL>
<HR>
This document was created by
man2html,
using the manual pages.<BR>
Time: 00:48:54 GMT, November 01, 2003


<?php decoration_window_end(); ?>

<!-- Automatically generated by perllib2php on 01-Nov-2003 -->
