#!/usr/bin/perl -w

# Usage: perllib2php . ../../../fvwm  # both params are optional

use strict;

unless (`man2html none 2>/dev/null | grep -i 'Content-type: text/html'`) {
	die "You don't have man2html cgi needed for this script\n" .
		"It usually comes together with man(1) on Linux\n";
}

my $scriptDir = ($0 =~ m:(^.*?)/[^/]+$: ? $1 : ".");
my $scriptName = ($0 =~ m:([^/]+)$:, $1);

my $subdir = shift || ".";
my $outputDir = $scriptDir;
$outputDir  =   $subdir  if $subdir && $subdir =~ m!^/!;
$outputDir .= "/$subdir" if $subdir && $subdir !~ m!^/!;
my $parentDir = $subdir eq "."? ".": "..";

# currently hardcoded
my %versionInfo = (
	stable   => [ '../../../fvwm-2.4.x', '2.4.x' ],
	unstable => [ '../../../fvwm',       '2.5.x' ],
);

my $branch = exists $versionInfo{$subdir || "none"}? $subdir: "unstable";

my $sourceDir = shift || $versionInfo{$branch}->[0];
my $versionMask = $versionInfo{$branch}->[1];

die "No source directory $sourceDir found\n" unless -d $sourceDir;
die "No output directory $outputDir found\n" unless -d $outputDir;

my $version = `grep '^VERSION = ' '$sourceDir/Makefile' | cut -c11- | tr -d '\n'` || "x.y.z";

# not really used, this template is in file now
my $TEMPLATE_PAGE = q(
	<html>
	<head>
	<title>FVWM Manpage - @topic@</title>
	<style><!--
	# All these may be commented out
	#H1, H2 { margin-left: -0; }
	#BLACKQUOTE { margin-left: +48; }
	#P { margin-left: +24; }
	B { color: #ffffb0; }
	I { color: #b0ffff; }
	--></style>
	</head>
	<body BACKGROUND="../../black-stone1.jpg"
		bgcolor="#000000" text="#ffffff"
		link="#a0ffa0" vlink="#c8eec8" alink="#44ff44">
	<center>
	<h1><font color="pink">FVWM Manpage</font></h1>
	</center>

	@body@

	<hr>
	<!-- Automatically generated by @script@ on @date@ -->
	</body>
	</html>
);

# may be in template_index_body.inc later
my $INDEX_BODY = q(
	<h1>Index</h1>
	<hr>
	These pages were last generated on @date@ by @user@,
	from the @vermask@ man pages.<!-- in directory @source@. -->

	<hr>
	Start of man pages in section 1.
	<ul>
	@foreach@ topic in topics
		<li>@link(!@topic@)@
	@endforeach@
	</ul>

	<hr>
	<p>Return to the branch @link(../index)@.
);

my $namespace = {
	date => `date '+%d-%b-%Y' | tr -d '\n'`,
	user => $ENV{USER} || "mr_hacker",
	script => $scriptName,
	source => $sourceDir,
	vermask => $versionMask,
	version => $version,
	branch => $branch,
	parent => $parentDir,
	topic => "*unset-topic*",
};

sub topicToLink ($) {
	my $topic = shift;
	# don't link to itself unless forced using '!'
	return "<u>$topic</u>" if $topic !~ s/^!// && $topic eq $namespace->{topic};
	my $url = $topic;
	$topic =~ s|.*/||;
#	return qq{<a href="./$url.php">$topic</a>};
	return qq{<a href="<?php echo conv_link_target('./$url.php');?>">$topic</a>};
}

sub processTemplate ($) {
	my $text = shift;
	$text =~ s/^\n//s;
#	$text =~ s/^\t//mg;
	$text =~ s/\@foreach\@ (\w+) in (\w+)\n(.*?)\@endforeach\@\n/
		my ($var, $list, $subTemplate) = ($1, $namespace->{$2}, $3);
		join('', map { local $namespace->{$var} = $_;
			processTemplate($subTemplate); } @$list);
	/seg;
	$text =~ s/\@link\((.*?)\)\@/topicToLink(&processTemplate($1))/sge;
	$text =~ s/@(\w+)@/$namespace->{$1}/mge;
	return $text;
}

sub saveFile ($$) {
	my $fileName = shift;
	my $text = shift;
	open(OUT, ">$outputDir/$fileName") || die($!);
	print OUT $text;
	close(OUT) || die($!);
}

sub loadFile ($) {
	my $fileName = shift;
	open(IN, "<$scriptDir/$fileName") || die($!);
	my $text = join('', <IN>);
	close(IN) || die($!);
	return $text;
}

# ---- main ------------------------------------------------------------------

# currently only support .1 manpages, but it is possible to extend this
my @topics = `fvwm-perllib cat` =~ /^ +([\w:]+)$/mg;
my $topicRegExp = join("|", reverse @topics);
$namespace->{topics} = [ @topics ];
print "Topics reported by fvwm-perllib cat:\n\t", join("\n\t", @topics), "\n";
print "Output directory is $outputDir\n";

foreach my $topic (@topics) {
        my $phpFile = "$topic.php";
        print "Creating $phpFile\n";
        $namespace->{topic} = $topic;

	my $sourceRefer = "";
	if ($topic =~ /::/) {
		my $srcFile = $topic . ".pm"; $srcFile =~ s!::!/!g;
		$sourceRefer = qq(Source: <a href="ftp://ftp.fvwm.org/pub/fvwm/devel/sources/perllib/$srcFile">$srcFile</a><br>\n);
	}

	# some fixes
	my $fixCmd = q{perl -pe ' \
	s!^(\.in \+.*)!%blockquote%!i; s!^(\.in -.*)!%/blockquote%!i; \
	s!^(\.Vb.*)!%pre% %blockquote%!i; s!^(\.Ve.*)!%/pre% %/blockquote%!i; \
	s!\\\\fB\\\\\\*\\(--!\\\\fB\\-\\-!; '};

	local $_ = `fvwm-perllib raw $topic | $fixCmd | man2html -p`;

	# skip cgi header and footer
	s!^.*?<body>(.*)</body>.*$!$1!si;

	# replace some output
	s!\07!!g;
	s!<FONT SIZE="-1">!<FONT>!ig;
	s!<FONT><B>([^<]*?)</B></FONT><B>!<B>$1!ig;
	s!(<A HREF=".*?">)Index!$sourceRefer$1This page contents!;
	s!<A HREF=".*?">Return to Main Contents! - <a href="./">Return to main index!;
	s!(<H1>)perllib(</H1>)!$1 . "Perl Library " . ucfirst($topic) . $2!e;
	s!<A HREF="http://localhost/cgi-bin/man/man2html">man2html</A>!man2html!g;
	s!<A HREF="[^"]*?\d\+[\w\d]+">([^>]+)</A>!$1!g;

	# correct example blocks
	s!%(/?pre)%!<$1>!g;
	s!%(/?blockquote)%!<$1>!g;
	s!(<pre>)\s+(<blockquote>)\n*!$2$1!sig;
	s!\n*(</pre>)\s+(</blockquote>)!$1$2!sig;
	s!</pre></blockquote>\n<blockquote><pre>!\n\n!sg;

	# add links
	s!^((?:<blockquote><pre>)?\s*)($topicRegExp)((?:</pre></blockquote>)?)$!$1\@link($2)\@$3!mg;
	s!(the )($topicRegExp)( manpage)!$1\@link($2)\@$3!g;
	s!(the )([Ff]vwm[\w-]*)( manpage)!$1\@link(../manpages/$branch/$2)\@$3!g;
	s!(<[BbIi]>)($topicRegExp)(</[BbIi]>)!$1\@link($2)\@$3!g;
	s!(<[BbIi]>)(fvwm|Fvwm[\w]+)(</[BbIi]>)!$1\@link(../manpages/$branch/$2)\@$3!g;
	s!<H2>SEE ALSO</H2>.+?<H!local $_ = $&; s/( )($topicRegExp)([\., ])/$1\@link($2)\@$3/g; $_!se;

	$namespace->{body} = processTemplate($_);

	saveFile(
		$phpFile,
		processTemplate(loadFile("template.php"))
	);
}
