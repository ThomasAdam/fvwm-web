<?php
//--------------------------------------------------------------------
//-  File          : documentation/manpages/template.php
//-  Project       : FVWM Home Page
//-  Programmer    : Uwe Pross
//--------------------------------------------------------------------

// This is an autogenerated file, use perllib2php to create it.

//--------------------------------------------------------------------
// this manpages should not appear in the navigation structure
// so we hide its contents from navgen
//--------------------------------------------------------------------
if (strlen("$navigation_check") > 0) return;

$rel_path = "./../..";

//--------------------------------------------------------------------
// load some global definitions
//--------------------------------------------------------------------
include("$rel_path/definitions.inc");

//--------------------------------------------------------------------
// Site definitions
//--------------------------------------------------------------------
$title          = "FVWM - Perl library - FVWM::EventNames";
$heading        = "FVWM - Perl library - FVWM::EventNames";
$link_name      = "Perl library";
$link_picture   = "pictures/icons/doc_manpages";
$parent_site    = "documentation";
$child_sites    = array();
$requested_file = basename(my_get_global("PHP_SELF", "SERVER"));
$this_site      = "manpages";

//--------------------------------------------------------------------
// load the layout file
//--------------------------------------------------------------------
if (strlen($site_has_been_loaded) == 0) {
	$site_has_been_loaded = "true";
	if (strlen($layout) > 0) {
		$file = "$rel_path/layout_$layout.inc";
		if (file_exists($file)) $layout_file = $file;
	}
	include(sec_filename($layout_file));
	exit();
}
?>

<?php decoration_window_start("Manual page for FVWM::EventNames in unstable branch (2.5.7)"); ?>

<H1>FVWM::EventNames</H1>
Section: FVWM Perl library (3)<BR>Updated: 2003-05-31<BR>Source: <a href="ftp://ftp.fvwm.org/pub/fvwm/devel/sources/perllib/FVWM/EventNames.pm">FVWM/EventNames.pm</a><br>
<A HREF="#index">This page contents</A>
 - <a href="./">Return to main index</A><HR>

<A NAME="lbAB">&nbsp;</A>
<H2>NAME</H2>

FVWM::EventNames - names and types of all FVWM event arguments
<A NAME="lbAC">&nbsp;</A>
<H2>SYNOPSIS</H2>

<A NAME="ixAAC"></A>
<blockquote><pre>  use FVWM::EventNames;</pre></blockquote>
<P>

<blockquote><pre>  print &quot;All event names: &quot;, join(&quot;, &quot;, @{allEventNames()}), &quot;\n&quot;;
  print &quot;All event types: &quot;, join(&quot;, &quot;, @{allEventTypes()}), &quot;\n&quot;;</pre></blockquote>
<P>

<blockquote><pre>  my $name      = eventName     (M_ICON_LOCATION);
  my $argValues = eventArgValues(M_ICON_LOCATION, $packedStr);
  my $argNames  = eventArgNames (M_ICON_LOCATION, $argValues);
  my $argTypes  = eventArgTypes (M_ICON_LOCATION, $argValues);
  my $args      = eventArgs     (M_ICON_LOCATION, $argValues);</pre></blockquote>
<A NAME="lbAD">&nbsp;</A>
<H2>DESCRIPTION</H2>

<A NAME="ixAAD"></A>
Every event send by <I><a href="<?php echo conv_link_target('./../manpages/unstable/fvwm.php');?>">fvwm</a></I> consist of arguments. The argument names and
types vary from one event type to another. For example, event of the
type <B>M_NEW_DESK</B> consists of only one argument <I>desk</I> of type <I>number</I>.
<B>M_NEW_PAGE</B> consists of 5 numeric arguments, <B>M_MINI_ICON</B> consists of 10
arguments of different types.
<P>

This class provides information about all fvwm events. It provides such
services as listing all supporting event types and their names,
converting event type to event name, listing the event argument names/types,
constructing event argument values from the plain packet data.
arguments
, like event name, event
typenames and types of all fvwm event
arguments and event names.
<P>

Usually you do not need to work with this class directly, but, instead, with
<B><a href="<?php echo conv_link_target('./FVWM::Event.php');?>">FVWM::Event</a></B> objects. Hovewer, you may need this class source as a
reference for the names of the event arguments and their types.
<A NAME="lbAE">&nbsp;</A>
<H2>PUBLIC FUNCTIONS</H2>

<A NAME="ixAAE"></A>
<DL COMPACT>
<DT><B>eventName</B> <I>type</I><DD>
<A NAME="ixAAF"></A>
Returns the string representation of the numeric event <I>type</I> constant,
like <I>M_RAISE_WINDOW</I> or <I></I><FONT><I>MX_ENTER_WINDOW</I></FONT><I></I>.
<DT><B>eventArgValues</B> <I>type</I> <I>packedStr</I><DD>
<A NAME="ixAAG"></A>
Constructs array ref of argument values for the event <I>type</I>
from the <I>packedStr</I> (as received from <I><a href="<?php echo conv_link_target('./../manpages/unstable/fvwm.php');?>">fvwm</a></I>).


<P>


If the last argument type of the event is string, for convenience,
everything past the first null (or newline) is automatically stripped
from the last argument value.
<DT><B>eventArgNames</B> <I>type</I> <I>argValues</I><DD>
<A NAME="ixAAH"></A>
Returns array ref of argument names of the event type.


<P>


<I>argValues</I> is either the real array ref of values (as returned by
<B>eventArgValues</B>) or a number of actual values.
The returned array has the same number of elements.
<DT><B>eventArgTypes</B> <I>type</I> <I>argValues</I><DD>
<A NAME="ixAAI"></A>
Returns array ref of argument types of the event type.


<P>


<I>argValues</I> is either the real array ref of values (as returned by
<B>eventArgValues</B>) or a number of actual values.
The returned array has the same number of elements.
<DT><B>eventArgs</B> <I>type</I> <I>argValues</I><DD>
<A NAME="ixAAJ"></A>
Constructs hash ref of the named arguments for the event <I>type</I>
from the <I>argValues</I> array ref (as returned by <B>eventArgValues</B>).
<DT><B>eventArgAliases</B> <I>type</I><DD>
<A NAME="ixAAK"></A>
This method is provided for backward compatibility when argument names
are changed. For example, in the past the argument name of <I>M_NEW_DESK</I>
was <B>desk</B>, but now it is <B>desk_n</B>. Using this method it is possible
to make both names supported. Returns hash ref (old-name =&gt; new-name).
<DT><B>allEventNames</B><DD>
<A NAME="ixAAL"></A>
Returns array ref of all known event names (strings).
In the list context returns list of these names.
<DT><B>allEventTypes</B><DD>
<A NAME="ixAAM"></A>
Returns array ref of all known event types (numbers).
In the list context returns list of these types.
<DT><B>allEventTypeNames</B><DD>
<A NAME="ixAAN"></A>
Returns hash ref of all known event names and types (type =&gt; name).
</DL>
<A NAME="lbAF">&nbsp;</A>
<H2>SEE ALSO</H2>

<A NAME="ixAAO"></A>
FVWM::Event.
<P>

<HR>
<A NAME="index">&nbsp;</A><H2>Index</H2>
<DL>
<DT><A HREF="#lbAB">NAME</A><DD>
<DT><A HREF="#lbAC">SYNOPSIS</A><DD>
<DT><A HREF="#lbAD">DESCRIPTION</A><DD>
<DT><A HREF="#lbAE">PUBLIC FUNCTIONS</A><DD>
<DT><A HREF="#lbAF">SEE ALSO</A><DD>
</DL>
<HR>
This document was created by
man2html,
using the manual pages.<BR>
Time: 23:10:57 GMT, May 30, 2003


<?php decoration_window_end(); ?>

<!-- Automatically generated by perllib2php on 31-May-2003 -->
